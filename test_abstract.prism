mdp

const int locales = 4;
const int num_tasks  = 2;

const int dist_L1L1  = 1;
const int dist_L1L2  = 2;
const int dist_L1L3  = 3;
const int dist_L1L4  = 4;
const int dist_L2L1  = 1;
const int dist_L2L2  = 2;
const int dist_L2L3  = 3;
const int dist_L2L4  = 4;
const int dist_L3L1  = 1;
const int dist_L3L2  = 2;
const int dist_L3L3  = 3;
const int dist_L3L4  = 4;
const int dist_L4L1  = 1;
const int dist_L4L2  = 2;
const int dist_L4L3  = 3;
const int dist_L4L4  = 4;

const int T1_duration = 4;
const int T2_duration = 4;

// because the robots are not synced up step-wise, it's harder to measure time

module robot1

	R1_assignment : [0..num_tasks] init 0; //assignment of robot to task, 0 = unassigned 
	R1_locale: [1..locales] init 1; //locale of the robot; tasks will have different costs according to locale at which the robot attempts them
	R1_lock : bool init false;
	R1_readyin : [0..8] init 0;		

	[release] true -> (R1_lock' = false) & (R1_assignment' = 0) & (R1_readyin' = max(R1_readyin-1, 0));

 	[R1T1_complete] R1_readyin = 0 & R1_locale = 1 & T1_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L1L1 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 1 & T1_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L1L2 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 1 & T1_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L1L3 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 1 & T1_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L1L4 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 2 & T1_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L2L1 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 2 & T1_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L2L2 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 2 & T1_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L2L3 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 2 & T1_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L2L4 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 3 & T1_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L3L1 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 3 & T1_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L3L2 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 3 & T1_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L3L3 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 3 & T1_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L3L4 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 4 & T1_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L4L1 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 4 & T1_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L4L2 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 4 & T1_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L4L3 + T1_duration);
 	[R1T1_complete] R1_readyin = 0 & R1_locale = 4 & T1_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T1_locale) & (R1_readyin' = dist_L4L4 + T1_duration);

 	[R1T2_complete] R1_readyin = 0 & R1_locale = 1 & T2_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L1L1 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 1 & T2_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L1L2 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 1 & T2_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L1L3 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 1 & T2_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L1L4 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 2 & T2_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L2L1 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 2 & T2_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L2L2 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 2 & T2_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L2L3 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 2 & T2_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L2L4 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 3 & T2_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L3L1 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 3 & T2_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L3L2 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 3 & T2_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L3L3 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 3 & T2_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L3L4 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 4 & T2_locale = 1 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L4L1 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 4 & T2_locale = 2 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L4L2 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 4 & T2_locale = 3 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L4L3 + T2_duration);
 	[R1T2_complete] R1_readyin = 0 & R1_locale = 4 & T2_locale = 4 & R1_assignment = 0 -> (R1_assignment' = 1) & (R1_lock' = true) & (R1_locale' = T2_locale) & (R1_readyin' = dist_L4L4 + T2_duration);

	[R1_wait] true -> (R1_lock' = true);

endmodule

module robot2

	R2_assignment : [0..num_tasks] init 0; //assignment of robot to task, 0 = unassigned 
	R2_locale: [1..locales] init 1; //locale of the robot; tasks will have different costs according to locale at which the robot attempts them
	R2_lock : bool init false;
	R2_readyin : [0..8] init 0;		

	[release] true -> (R2_lock' = false) & (R2_assignment' = 0) & (R2_readyin' = max(R2_readyin-1, 0));

 	[R2T1_complete] R2_readyin = 0 & R2_locale = 1 & T1_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L1L1 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 1 & T1_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L1L2 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 1 & T1_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L1L3 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 1 & T1_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L1L4 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 2 & T1_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L2L1 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 2 & T1_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L2L2 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 2 & T1_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L2L3 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 2 & T1_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L2L4 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 3 & T1_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L3L1 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 3 & T1_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L3L2 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 3 & T1_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L3L3 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 3 & T1_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L3L4 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 4 & T1_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L4L1 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 4 & T1_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L4L2 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 4 & T1_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L4L3 + T1_duration);
 	[R2T1_complete] R2_readyin = 0 & R2_locale = 4 & T1_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale) & (R2_readyin' = dist_L4L4 + T1_duration);

 	[R2T2_complete] R2_readyin = 0 & R2_locale = 1 & T2_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L1L1 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 1 & T2_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L1L2 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 1 & T2_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L1L3 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 1 & T2_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L1L4 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 2 & T2_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L2L1 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 2 & T2_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L2L2 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 2 & T2_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L2L3 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 2 & T2_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L2L4 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 3 & T2_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L3L1 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 3 & T2_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L3L2 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 3 & T2_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L3L3 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 3 & T2_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L3L4 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 4 & T2_locale = 1 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L4L1 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 4 & T2_locale = 2 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L4L2 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 4 & T2_locale = 3 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L4L3 + T2_duration);
 	[R2T2_complete] R2_readyin = 0 & R2_locale = 4 & T2_locale = 4 & R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T2_locale) & (R2_readyin' = dist_L4L4 + T2_duration);

	[R2_wait] true -> (R2_lock' = true);

endmodule



//module robot2
//
//	R2_assignment : [0..num_tasks] init 0; //assignment of robot to task, 0 = unassigned 
//	R2_locale: [1..locales] init 2; //locale of the robot; tasks will have different costs according to locale at which the robot attempts them
//	R2_lock : bool init false;
//	R2_readyin : [0..3] init 0;	
//
//	[release] true -> (R2_lock' = false) & (R2_assignment' = 0);
//
//	[R2T1_complete] R2_assignment = 0 -> (R2_assignment' = 1) & (R2_lock' = true) & (R2_locale' = T1_locale);
//	[R2T2_complete] R2_assignment = 0 -> (R2_assignment' = 2) & (R2_lock' = true) & (R2_locale' = T2_locale);
//
//endmodule


module task1
	
	T1_satisfied : bool init false;

	T1_locale: [1..locales] init 4;

	[R1T1_complete] true->  (T1_satisfied' = true);
	[R2T1_complete] true->  (T1_satisfied' = true);
	
	[release] true -> (T1_satisfied' = false);

endmodule


module task2
	
	T2_satisfied : bool init false;

	T2_locale: [1..locales] init 2;

	[R1T2_complete] true ->  (T2_satisfied' = true);
	[R2T2_complete] true ->  (T2_satisfied' = true);

	[release] true -> (T2_satisfied' = false);

endmodule

//module task2 = task1[T1_satisfied=T2_satisfied, R1T1_complete = R1T2_complete, T1_locale = T2_locale] endmodule

formula all_assigned = (R1_lock | R1_readyin > 0) & (R2_lock | R2_readyin > 0);

module sync

	[release] all_assigned -> true;

endmodule

rewards "time"

	[release] true : 1;

endrewards

rewards "satisfaction"

	[] !T1_satisfied : 1;
	[] !T2_satisfied : 1;

endrewards

